[{"path":"https://jfoadi.github.io/crone/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"James Foadi. Maintainer, author.","code":""},{"path":"https://jfoadi.github.io/crone/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Foadi J (2022). crone: Structural Crystallography 1d. R package version 0.1.1, https://jfoadi.github.io/crone/.","code":"@Manual{,   title = {crone: Structural Crystallography in 1d},   author = {James Foadi},   year = {2022},   note = {R package version 0.1.1},   url = {https://jfoadi.github.io/crone/}, }"},{"path":"https://jfoadi.github.io/crone/index.html","id":"crone","dir":"","previous_headings":"","what":"Structural Crystallography in 1d","title":"Structural Crystallography in 1d","text":"goal crone carry task calculations structural crystallography using 1D crystal structure models. 1D models included package taken existing linear chemical molecules. full description theory behind 1D crystallography crone package can studied article. package aimed undergraduate graduate students need trained structural crystallography development methods structural crystallography.","code":""},{"path":"https://jfoadi.github.io/crone/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Structural Crystallography in 1d","text":"can install released version crone CRAN : development version GitHub :","code":"install.packages(\"crone\") # install.packages(\"devtools\") devtools::install_github(\"jfoadi/crone\")"},{"path":"https://jfoadi.github.io/crone/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Structural Crystallography in 1d","text":"Structures stored named lists type sdata: structure loaded (created scratch), ideal electron density can calculated plotted:  repeated motive unit cell can plotted several unit cells:  diffraction pattern due just one unit cell multiple unit cells created function diffraction:   Many examples can studied five tutorials included package vignettes. first three tutorials set introductory/intermediate level; last two tutorials difficult digest.","code":"library(crone)  # Load carbon dioxide sdata <- load_structure(\"carbon_dioxide\")  # sdata includes:  # cell length(a), space group (SG),atoms position (x0),  # atomic numbers (Z),B-factors (B), occupancies (occ) sdata #> $a #> [1] 6.066 #>  #> $SG #> [1] \"P-1\" #>  #> $x0 #> [1] 1.870 3.033 #>  #> $Z #> [1] 8 6 #>  #> $B #> [1] 10.000 13.333 #>  #> $occ #> [1] 1.0 0.5 rtmp <- structure_gauss(sdata=sdata,N=1000) plot(rtmp$x,rtmp$rr,type=\"l\",      xlab=expression(x),ylab=expression(rho)) x <- seq(-sdata$a*10,sdata$a*10,length=20000) rtmp <- structure_gauss(sdata=sdata,x=x) plot(rtmp$x,rtmp$rr,type=\"l\",      xlab=expression(x),ylab=expression(rho)) # One unit cell dtmp <- diffraction(sdata=sdata,D=1,Ncell=1) plot(dtmp$xstar,dtmp$Imod,type=\"l\",xlab=expression(s),      ylab=expression(I)) # 10 unit cells dtmp <- diffraction(sdata=sdata,D=1,Ncell=10) plot(dtmp$xstar,dtmp$Imod,type=\"l\",xlab=expression(s),      ylab=expression(I))"},{"path":"https://jfoadi.github.io/crone/index.html","id":"reference","dir":"","previous_headings":"","what":"Reference","title":"Structural Crystallography in 1d","text":"Details theory algorithms behind crone can found : E. Smith, G. Evans J. Foadi (2017), “effective introduction structural crystallography using 1D Gaussian atoms”, Eur. J. Phys. 38, link","code":""},{"path":"https://jfoadi.github.io/crone/reference/Kgauss.html","id":null,"dir":"Reference","previous_headings":"","what":"Constant normalizing wrapped gaussian — kgauss","title":"Constant normalizing wrapped gaussian — kgauss","text":"Constant normalizing wrapped gaussian","code":""},{"path":"https://jfoadi.github.io/crone/reference/Kgauss.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constant normalizing wrapped gaussian — kgauss","text":"","code":"kgauss(sigma, a)"},{"path":"https://jfoadi.github.io/crone/reference/Kgauss.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constant normalizing wrapped gaussian — kgauss","text":"sigma real number. standard deviation wrapped gaussian. real number. unit cell side length.","code":""},{"path":"https://jfoadi.github.io/crone/reference/Kgauss.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constant normalizing wrapped gaussian — kgauss","text":"real number, multiplicative constant normalizing wrapped gaussian atom area curve equal 1.","code":""},{"path":"https://jfoadi.github.io/crone/reference/Kgauss.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Constant normalizing wrapped gaussian — kgauss","text":"","code":"Z <- 16  # Sulphur atom sigma <- 0.05*sqrt(Z) a <- 15  # Unit cell size kk <- kgauss(sigma,a) print(kk) #> [1] 1.994711"},{"path":"https://jfoadi.github.io/crone/reference/SFobs.html","id":null,"dir":"Reference","previous_headings":"","what":"Generation of structure factors with errors — sfobs","title":"Generation of structure factors with errors — sfobs","text":"function generates structure factors calculated starting given structure subject two types errors: poissonian counting errors due statistical nature photons hitting crystal normal errors due slight random shifting atoms position unit cells forming lattice.","code":""},{"path":"https://jfoadi.github.io/crone/reference/SFobs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generation of structure factors with errors — sfobs","text":"","code":"sfobs(hidx, sdata, vx0err = NULL, ntrialP = 100, ntrialG = 100,   anoflag = FALSE, aK = anoK, lbda = 1, k = ksigma,   f1f2out = TRUE)"},{"path":"https://jfoadi.github.io/crone/reference/SFobs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generation of structure factors with errors — sfobs","text":"hidx Real numeric. One 1D Miller indices. sdata named list, normally obtained use function read_x standardise_sdata.  list names correspond different object types: .     Real numeric. size unit cell. SG.    Character string. Space group symbol; either \"P1\"                 \"P-1\" x0.    Vector real numerics indicating expanded atomic                positions unit cell. Z.     Vector integers indicating expanded                 atomic numbers atoms unit cell. B.    Vector real numerics indicating expanded                B factors atoms unit cell. occ.  Vector real numerics indicating expanded                occupancies atoms unit cell. vx0err real number. standard deviation random  displacement atoms composing structure correct position. Default value NULL, corresponding generation structure factors, errors, correct structure. ntrialP Integer. number simulated Poisson counts set structure factor amplitudes. counts (high ntrialP) return smaller errors structure factor amplitudes. ntrialP less  equal 0, poissonian counting errors generated. ntrialG Integer. number randomly generated shifts atom structure true position. shifts follow gaussian distribution mean 0 standard deviation vx0err. anoflag Logical variable. TRUE forces scattering factors include anomalous contributions. consequence, theoretical Friedel's pairs equal. aK Real numeric. fudge factor included decrease strength anomalous contributions. Without aK strength high 1D structures, compared real 3D structures. aK helps bringing anomalous contribution within 5 met large-size structures. default value aK=0.3 (anoK included internal data). lbda Real numeric. wavelength angstroms. value important relation anomalous scattering. k real number. controls standard deviation  gaussian function describing atom , thus, shape associated peak. standard deviation sigma given :       sigma = k * sqrt(Z) default value k=0.05 (ksigma included internal data). f1f2out Logical variable. variable controls output small table f' f'' values chemical elements structure. Default table printed.","code":""},{"path":"https://jfoadi.github.io/crone/reference/SFobs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generation of structure factors with errors — sfobs","text":"named list two elements:  F Array mean structure factor amplitudes, among structure             factor arrays simulated specific errors. sF  Array structure factors errors. coincide               standard deviations structure factors arrays simulated               specific errors.","code":""},{"path":"https://jfoadi.github.io/crone/reference/SFobs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generation of structure factors with errors — sfobs","text":"","code":"# Load thiocyanate data sdata <- load_structure(\"thiocyanate\")  # Miller indices used hidx <- 1:10  # Correct amplitudes and phases ftmp <- strufac(hidx,sdata) Ftrue <- ftmp$Fmod phitrue <- ftmp$Fpha  # Only poissonian errors ltmp <- sfobs(hidx,sdata,ntrialP=2) print(names(ltmp)) #> [1] \"F\"  \"sF\" Fpois <- ltmp$F  # True density rtmptrue <- fousynth(sdata$a,Fmod=Ftrue,Fpha=phitrue,hidx,1000) plot(rtmptrue$x,rtmptrue$rr,type=\"l\",xlab=\"x\",ylab=expression(rho),  lwd=3)  # Density with poissonian errors rtmppois <- fousynth(sdata$a,Fmod=Fpois,Fpha=phitrue,hidx,1000) points(rtmppois$x,rtmppois$rr,type=\"l\",  lty=2,col=2,lwd=2) # Very small differences  # Only random atomic errors with standard deviation 0.3 angstroms ltmp <- sfobs(hidx,sdata,ntrialP=0,vx0err=0.3) Fcoords <- ltmp$F  # Density with gaussian errors on atom coordinates rtmpcoords <- fousynth(sdata$a,Fmod=Fcoords,Fpha=phitrue,hidx,1000) points(rtmpcoords$x,rtmpcoords$rr,type=\"l\",  lty=3,col=3,lwd=2) # Larger differences"},{"path":"https://jfoadi.github.io/crone/reference/anomalous_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Theoretical scattering factors for all atomic species — anomalous_data","title":"Theoretical scattering factors for all atomic species — anomalous_data","text":"dataset list element atomic species. element list dataframe 3 columns.","code":""},{"path":"https://jfoadi.github.io/crone/reference/anomalous_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Theoretical scattering factors for all atomic species — anomalous_data","text":"","code":"anomalous_data"},{"path":"https://jfoadi.github.io/crone/reference/anomalous_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Theoretical scattering factors for all atomic species — anomalous_data","text":"list whose elements dataframes corresponding atomic         elements. dataframe following columns: lambda Specific value wavelength angstroms. f1 Real scattering component. f2 Imaginary scattering component.","code":""},{"path":"https://jfoadi.github.io/crone/reference/atom_gauss.html","id":null,"dir":"Reference","previous_headings":"","what":"Gaussian atom — atom_gauss","title":"Gaussian atom — atom_gauss","text":"Gaussian atom","code":""},{"path":"https://jfoadi.github.io/crone/reference/atom_gauss.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gaussian atom — atom_gauss","text":"","code":"atom_gauss(x, a, x0 = 0, Z = 1, B = 0, k = ksigma)"},{"path":"https://jfoadi.github.io/crone/reference/atom_gauss.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gaussian atom — atom_gauss","text":"x Point 1D cell function calculated. real number. width unit cell gaussian atom placed. x0 real number. point corresponding atom's peak. Z integer number. Z atomic number atom (Z(H)=1, Z()=2,Z(Li)=3,Z(B)=4, etc). B real number. B factor characterizing atom's thermal agitation. given B=8*pi^2*U, U variance position atoms' nucleus around equilibrium position. k real number. controls standard deviation  gaussian function describing atom , thus, shape associated peak. standard deviation sigma given :          sigma = k * sqrt(Z)","code":""},{"path":"https://jfoadi.github.io/crone/reference/atom_gauss.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gaussian atom — atom_gauss","text":"vector length equal length vector x, values equal evaluated gaussian atom.","code":""},{"path":"https://jfoadi.github.io/crone/reference/atom_gauss.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gaussian atom — atom_gauss","text":"","code":"# Carbon gaussian atom in the middle of a cell a <- 10 x0 <- 5 Z <- 6 x <- seq(0,a,length=1000) rho <- atom_gauss(x,a,x0,Z) plot(x,rho,type=\"l\",xlab=\"x\",ylab=expression(rho))"},{"path":"https://jfoadi.github.io/crone/reference/atoms.html","id":null,"dir":"Reference","previous_headings":"","what":"Atom names and atomic number — atoms","title":"Atom names and atomic number — atoms","text":"dataframe including 2-characters string indicating atomic element name integer indicating atomic number Z.","code":""},{"path":"https://jfoadi.github.io/crone/reference/atoms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Atom names and atomic number — atoms","text":"","code":"atoms"},{"path":"https://jfoadi.github.io/crone/reference/atoms.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Atom names and atomic number — atoms","text":"dataframe following columns: anames 2-character string indicating atomic name. Z Integer. atomic number.","code":""},{"path":"https://jfoadi.github.io/crone/reference/choose_a.html","id":null,"dir":"Reference","previous_headings":"","what":"Suggests unit cell side, a, based on atom content — choose_a","title":"Suggests unit cell side, a, based on atom content — choose_a","text":"unit cell side roughly calculated adding two times half-width widest gaussian atom largest inter-atomic distance. half-width largest gaussian computed Ma times gaussian sigma. \"P-1\" symmetry present, D doubled.","code":""},{"path":"https://jfoadi.github.io/crone/reference/choose_a.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Suggests unit cell side, a, based on atom content — choose_a","text":"","code":"choose_a(Z, D, SG = \"P1\", k = ksigma, Ma = 5)"},{"path":"https://jfoadi.github.io/crone/reference/choose_a.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Suggests unit cell side, a, based on atom content — choose_a","text":"Z vector atom Z numbers. D real number. distance two furthest atoms cell. SG 2-letters character string. Symmetry. two symmetries possible working within 1D crystallography, P1 (symmetry)P-1 (inversion origin). SG can either \"P1\" \"P-1\" function. k real number. controls standard deviation  gaussian function describing atom , thus, shape associated peak. standard deviation sigma given :          sigma = k * sqrt(Z) Ma real number. gaussian atom tails truncated distance Ma * sigma peak.","code":""},{"path":"https://jfoadi.github.io/crone/reference/choose_a.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Suggests unit cell side, a, based on atom content — choose_a","text":"real number suggests feasible unit cell side  containing atoms.","code":""},{"path":"https://jfoadi.github.io/crone/reference/choose_a.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Suggests unit cell side, a, based on atom content — choose_a","text":"","code":"# 2 carbon atoms, a sulphur and an oxygen Z <- c(6,8,16,6)  # Distance between the two carbons is 15 angstroms D <- 15 a <- choose_a(Z,D)"},{"path":"https://jfoadi.github.io/crone/reference/diffraction.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulation of 1D diffraction pattern — diffraction","title":"Simulation of 1D diffraction pattern — diffraction","text":"Analytic Fourier transform electron density corresponding array Ncell unit cells calculated using numerical  integration trapezoid rule. diffraction peaks' height  proportional number unit cells ( Ncell).  number diffraction peaks included 1D diffraction pattern  related maximum resolution D provided input.  number grid points simulated electron density resulting diffraction pattern can also provided input. input parameter radius beamstop disc stop diffraction close incoming beam (resulting intensity far outweigh rest diffracted intensities).","code":""},{"path":"https://jfoadi.github.io/crone/reference/diffraction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulation of 1D diffraction pattern — diffraction","text":"","code":"diffraction(sdata, D, Ncell = 10, N = 1000, n = 100, bstop = NULL)"},{"path":"https://jfoadi.github.io/crone/reference/diffraction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulation of 1D diffraction pattern — diffraction","text":"sdata named list, normally obtained use functions read_x standardise_sdata.  list names correspond different object types: .     Real numeric. size unit cell. SG.    Character string. Space group symbol; either \"P1\"                 \"P-1\" x0.    Vector real numerics indicating expanded atomic                positions unit cell. Z.     Vector integers indicating expanded                 atomic numbers atoms unit cell. B.    Vector real numerics indicating expanded                B factors atoms unit cell. occ.  Vector real numerics indicating expanded                occupancies atoms unit cell. D Real numeric. Maximum resolution angstroms. Ncell Positive integer. number unit cells  1D crystal. default value Ncell=10. N Positive integer indicating number grid points electron density. default value N=1000. n Positive integer determining reciprocal space grid. grid made 2*n+1 regularly-spaced points -1/D  1/D. value 0 always centre grid.  default value n=100. bstop Real numeric. radius backstop disc. Intensities points closer origin bstop reduced  0. presence backstop improves contrast diffracted intensities gets rid overwhelming intensity corresponding origin reciprocal space. default include backstop.","code":""},{"path":"https://jfoadi.github.io/crone/reference/diffraction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulation of 1D diffraction pattern — diffraction","text":"named list two vectors real numbers, values    reciprocal space grid points (1/angstrom units) xstar intensities Imod.","code":""},{"path":"https://jfoadi.github.io/crone/reference/diffraction.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulation of 1D diffraction pattern — diffraction","text":"","code":"# Diffraction from just two unit cells of cyanate sdata <- load_structure(\"cyanate\")  # Max resolution is 1 angstroms; no backstop ltmp <- diffraction(sdata,D=1,Ncell=1)  # Plot diffraction pattern plot(ltmp$xstar,ltmp$Imod,type=\"l\",  xlab=expression(paste(\"x\"^\"*\")),ylab=\"Intensity\")   # Diffraction from 20 unit cells with backstop of 20 angstroms diameter ltmp <- diffraction(sdata,D=1,bstop=10) plot(ltmp$xstar,ltmp$Imod,type=\"l\",  xlab=expression(paste(\"x\"^\"*\")),ylab=\"Intensity\")"},{"path":"https://jfoadi.github.io/crone/reference/erf.html","id":null,"dir":"Reference","previous_headings":"","what":"Error function for real values — erf","title":"Error function for real values — erf","text":"Error function real values","code":""},{"path":"https://jfoadi.github.io/crone/reference/erf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Error function for real values — erf","text":"","code":"erf(x)"},{"path":"https://jfoadi.github.io/crone/reference/erf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Error function for real values — erf","text":"x vector real numbers.","code":""},{"path":"https://jfoadi.github.io/crone/reference/erf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Error function for real values — erf","text":"real number. integral gaussian, centred zero    standard deviation equal 1, 0 x, multiplied    2/sqrt(pi).","code":""},{"path":"https://jfoadi.github.io/crone/reference/erf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Error function for real values — erf","text":"","code":"x <- seq(-1,1,length=1000) y <- erf(x) plot(x,y,type=\"l\")"},{"path":"https://jfoadi.github.io/crone/reference/expand_to_cell.html","id":null,"dir":"Reference","previous_headings":"","what":"Expand content of asymmetric unit to whole unit cell — expand_to_cell","title":"Expand content of asymmetric unit to whole unit cell — expand_to_cell","text":"Atom positions, types, B factors occupancies duplicated input space group (SG) P-1; otherwise left untouched (space group P1). Value occupancy special positions barely checked values outside [0,1] range. Extra-care needed.","code":""},{"path":"https://jfoadi.github.io/crone/reference/expand_to_cell.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expand content of asymmetric unit to whole unit cell — expand_to_cell","text":"","code":"expand_to_cell(sdata, SG = NULL)"},{"path":"https://jfoadi.github.io/crone/reference/expand_to_cell.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expand content of asymmetric unit to whole unit cell — expand_to_cell","text":"sdata named list, normally obtained use function read_x. list names correspond  different object types: .     Real numeric. size unit cell. SG.    Character string. Space group symbol; either \"P1\"                 \"P-1\" x0.    Vector real numerics indicating expanded atomic                positions unit cell. Z.     Vector integers indicating expanded                 atomic numbers atoms unit cell. B.    Vector real numerics indicating expanded                B factors atoms unit cell. occ.  Vector real numerics indicating expanded                occupancies atoms unit cell. SG 2-letters character string. two symmetries possible working within 1D crystallography, P1 (symmetry) P-1 (inversion origin). SG can either \"P1\" \"P-1\" function. Default NULL, case space group assumed equal one input structure.","code":""},{"path":"https://jfoadi.github.io/crone/reference/expand_to_cell.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expand content of asymmetric unit to whole unit cell — expand_to_cell","text":"named list following elements:  .   Real numeric. size unit cell. SG.  Character string. Name space group, either \"P1\"               \"P-1\". x0. Vector real numerics indicating expanded atomic                positions unit cell. Z.  Vector integers indicating expanded atomic numbers                atoms unit cell. B.  Vector real numerics indicating expanded B factors                atoms unit cell. occ. Vector real numerics indicating expanded occupancies                  atoms unit cell.","code":""},{"path":"https://jfoadi.github.io/crone/reference/expand_to_cell.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expand content of asymmetric unit to whole unit cell — expand_to_cell","text":"","code":"# Asymmetric unit includes 3 atoms between 0 and a/2 a <- 10 SG <- \"P-1\" x0 <- c(1,2,4) Z <- c(6,8,6) B <- c(1,1.2,1.1) occ <- c(1,1,0.8) sdata <- standardise_sdata(a,SG,x0,Z,B,occ) ltmp <- expand_to_cell(sdata) print(ltmp)  # Positions, atomic numbers, etc. have doubled #> $a #> [1] 10 #>  #> $SG #> [1] \"P-1\" #>  #> $x0 #> [1] 1 2 4 6 8 9 #>  #> $Z #> [1] 6 8 6 6 8 6 #>  #> $B #> [1] 1.0 1.2 1.1 1.1 1.2 1.0 #>  #> $occ #> [1] 1.0 1.0 0.8 0.8 1.0 1.0 #>   # Nothing changes if imposed SG is \"P1\" (but you get a warning!) ltmp <- expand_to_cell(sdata,SG=\"P1\") #> Warning: Chosen space group different from input data one. print(ltmp) #> $a #> [1] 10 #>  #> $SG #> [1] \"P1\" #>  #> $x0 #> [1] 1 2 4 #>  #> $Z #> [1] 6 8 6 #>  #> $B #> [1] 1.0 1.2 1.1 #>  #> $occ #> [1] 1.0 1.0 0.8 #>"},{"path":"https://jfoadi.github.io/crone/reference/fluorescent_scan.html","id":null,"dir":"Reference","previous_headings":"","what":"Find optimal wavelength for anomalous phasing — fluorescent_scan","title":"Find optimal wavelength for anomalous phasing — fluorescent_scan","text":"function mimics behaviour fluorescent scan operated synchrotron beamlines find optimal wavelength maximises anomalous signal used phase structure.","code":""},{"path":"https://jfoadi.github.io/crone/reference/fluorescent_scan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find optimal wavelength for anomalous phasing — fluorescent_scan","text":"","code":"fluorescent_scan(chem_el, lambda_range = NULL)"},{"path":"https://jfoadi.github.io/crone/reference/fluorescent_scan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find optimal wavelength for anomalous phasing — fluorescent_scan","text":"chem_el 1- 2-letters character string. chemical symbol interest. lambda_range Real vector length 2. two values extremes wavelength window inside carry search. Default search carried across full available range.","code":""},{"path":"https://jfoadi.github.io/crone/reference/fluorescent_scan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find optimal wavelength for anomalous phasing — fluorescent_scan","text":"named list two elements: 1) idx integer indicating    row anomalous_data dataframe related specific chemical    element, corresponding optimal wavelength; 2) optimal wavelength    angstroms.","code":""},{"path":"https://jfoadi.github.io/crone/reference/fluorescent_scan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find optimal wavelength for anomalous phasing — fluorescent_scan","text":"","code":"# Optimal wavelength for iron lFe <- fluorescent_scan(\"Fe\") print(lFe$lambda) #> [1] 1.742797 idx <- lFe$idx  # Load anomalous dataframe for Fe adFe <- load_anomalous_data(\"Fe\") print(adFe[idx,])  # Same wavelength as before! #>      lambda        f1       f2 #> 82 1.742797 -7.712439 3.950112  # Optimal wavelength with window restriction lFe <- fluorescent_scan(\"Fe\",lambda_range=c(6,8)) print(lFe$lambda) #> [1] 7.75"},{"path":"https://jfoadi.github.io/crone/reference/fousynth.html","id":null,"dir":"Reference","previous_headings":"","what":"From structure factors to density using Fourier synthesis — fousynth","title":"From structure factors to density using Fourier synthesis — fousynth","text":"Given set structure factors, separately vector amplitudes  vector phases degrees, corresponding set 1D Miller indices, length 1D unit cell, set Miller indices number grid points used calculate 1D density, function calculates 1D density corresponding given structure factors.","code":""},{"path":"https://jfoadi.github.io/crone/reference/fousynth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"From structure factors to density using Fourier synthesis — fousynth","text":"","code":"fousynth(a, Fmod, Fpha, hidx, N)"},{"path":"https://jfoadi.github.io/crone/reference/fousynth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"From structure factors to density using Fourier synthesis — fousynth","text":"real number. unit cell side length. Fmod vector real numbers. structure factors' amplitudes corresponding 1D density calculated. Fpha vector real numbers. structure factors' phases (degrees) corresponding 1D density calculated. hidx vector integer numbers. set 1D Miller indices corresponding set structure factors F. N integer number. number grid points used calculate 1D density.","code":""},{"path":"https://jfoadi.github.io/crone/reference/fousynth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"From structure factors to density using Fourier synthesis — fousynth","text":"vector N real numbers representing calculated 1D density    regular N grid points.","code":""},{"path":"https://jfoadi.github.io/crone/reference/fousynth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"From structure factors to density using Fourier synthesis — fousynth","text":"","code":"# First create the crystal structure (in P1) a <- 10 SG <- \"P1\" x0 <- c(1,4,6.5) Z <- c(8,26,6) B <- c(18,20,17) occ <- c(1,1,1) sdata <- standardise_sdata(a,SG,x0,Z,B,occ)  # Enough Fourier components (Miller indices) hidx <- 0:20  # Compute the structure factors ftmp <- strufac(hidx,sdata)  # Number of grid points N <- 1000  # Density rtmp <- fousynth(a,ftmp$Fmod,ftmp$Fpha,hidx,N)  # Density plot in the unit cell x <- rtmp$x rho <- rtmp$rr plot(x,rho,type=\"l\",xlab=\"x\",ylab=expression(rho))"},{"path":"https://jfoadi.github.io/crone/reference/heaviside.html","id":null,"dir":"Reference","previous_headings":"","what":"Heaviside function (step function) — heaviside","title":"Heaviside function (step function) — heaviside","text":"Heaviside function (step function)","code":""},{"path":"https://jfoadi.github.io/crone/reference/heaviside.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Heaviside function (step function) — heaviside","text":"","code":"heaviside(x, x0 = 0)"},{"path":"https://jfoadi.github.io/crone/reference/heaviside.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Heaviside function (step function) — heaviside","text":"x vector real numbers. x0 real number. x value function step occurs.","code":""},{"path":"https://jfoadi.github.io/crone/reference/heaviside.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Heaviside function (step function) — heaviside","text":"One two numbers 0 1.","code":""},{"path":"https://jfoadi.github.io/crone/reference/heaviside.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Heaviside function (step function) — heaviside","text":"","code":"x <- seq(-3,5,length=1000) x0 <- 1 y <- heaviside(x,x0) plot(x,y,type=\"l\")  # Step up and step down x1 <- seq(-3,5,length=1000) x10 <- 1 y1 <- heaviside(x1,x10) x2 <- seq(1,9,length=1000) x20 <- 5 y2 <- heaviside(x2,x20) y2 <- 1-y2 plot(x1,y1,type=\"l\",xlim=c(-3,9),xlab=\"x\",ylab=\"y\") points(x2,y2,type=\"l\")"},{"path":"https://jfoadi.github.io/crone/reference/invfousynth.html","id":null,"dir":"Reference","previous_headings":"","what":"From density to structure factors using inverse Fourier synthesis — invfousynth","title":"From density to structure factors using inverse Fourier synthesis — invfousynth","text":"Given density vector calculated N grid points, unit cell size array Miller indices hidx, function calculates amplitudes phases structure factors corresponding density, via inverse Fourier transform.","code":""},{"path":"https://jfoadi.github.io/crone/reference/invfousynth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"From density to structure factors using inverse Fourier synthesis — invfousynth","text":"","code":"invfousynth(a, rho, hidx)"},{"path":"https://jfoadi.github.io/crone/reference/invfousynth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"From density to structure factors using inverse Fourier synthesis — invfousynth","text":"real number. unit cell side length. rho vector N real numbers representing 1D density regular N grid point. hidx vector integer numbers. set 1D Miller indices corresponding set structure factors F, calculated.","code":""},{"path":"https://jfoadi.github.io/crone/reference/invfousynth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"From density to structure factors using inverse Fourier synthesis — invfousynth","text":"vector N real numbers representing calculated 1D     density one regular N grid points.","code":""},{"path":"https://jfoadi.github.io/crone/reference/invfousynth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"From density to structure factors using inverse Fourier synthesis — invfousynth","text":"","code":"# First create the crystal structure (in P1) a <- 10 SG <- \"P1\" x0 <- c(1,4,6.5) Z <- c(8,26,6) B <- c(18,20,17) occ <- c(1,1,1) sdata <- standardise_sdata(a,SG,x0,Z,B,occ)  # 10 Miller indices plus DC component hidx <- 0:10  # Compute structure factors ftmp1 <- strufac(hidx,sdata)  # Number of grid points N <- 1000  # Density rtmp <- fousynth(a,ftmp1$Fmod,ftmp1$Fpha,hidx,N)  # Using inverse Fourier to obtain structure factors ftmp2 <- invfousynth(a,rtmp$rr,hidx)  # Comparison print(abs(ftmp1$Fmod-ftmp2$Fmod)) #>  [1] 0.000000e+00 3.552714e-15 1.776357e-15 3.552714e-15 5.329071e-15 #>  [6] 4.440892e-16 0.000000e+00 4.440892e-16 1.998401e-15 3.219647e-15 #> [11] 1.318390e-16 print(abs(ftmp1$Fpha-ftmp2$Fpha)) #>  [1] 0.000000e+00 0.000000e+00 1.421085e-14 0.000000e+00 0.000000e+00 #>  [6] 0.000000e+00 0.000000e+00 0.000000e+00 2.131628e-13 3.552714e-13 #> [11] 0.000000e+00"},{"path":"https://jfoadi.github.io/crone/reference/load_anomalous_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Load anomalous data for a specific chemical element — load_anomalous_data","title":"Load anomalous data for a specific chemical element — load_anomalous_data","text":"Returns dataframe f' f'' various wavelengths specific chemical element.","code":""},{"path":"https://jfoadi.github.io/crone/reference/load_anomalous_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load anomalous data for a specific chemical element — load_anomalous_data","text":"","code":"load_anomalous_data(chem_el)"},{"path":"https://jfoadi.github.io/crone/reference/load_anomalous_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load anomalous data for a specific chemical element — load_anomalous_data","text":"chem_el 1- 2-letters character string. chemical symbol interest.","code":""},{"path":"https://jfoadi.github.io/crone/reference/load_anomalous_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load anomalous data for a specific chemical element — load_anomalous_data","text":"dataframe 3 columns, specific wavelength angstroms    (lambda), f' (f1) f'' (f2).","code":""},{"path":"https://jfoadi.github.io/crone/reference/load_anomalous_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load anomalous data for a specific chemical element — load_anomalous_data","text":"","code":"# Load anomalous data for Fe ano_Fe <- load_anomalous_data(\"Fe\") print(ano_Fe[1:10,]) #>        lambda        f1        f2 #> 278 0.4979920 0.2563753 0.4381573 #> 277 0.5000000 0.2576380 0.4415328 #> 276 0.5020243 0.2589039 0.4449462 #> 275 0.5040650 0.2601728 0.4483981 #> 274 0.5061224 0.2615686 0.4518891 #> 273 0.5081967 0.2628444 0.4554200 #> 272 0.5102881 0.2641232 0.4589911 #> 271 0.5123967 0.2654049 0.4626029 #> 270 0.5145228 0.2666895 0.4662563 #> 269 0.5166667 0.2679769 0.4699518"},{"path":"https://jfoadi.github.io/crone/reference/load_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Load observed structure factors from 1D structure data in workspace. — load_data","title":"Load observed structure factors from 1D structure data in workspace. — load_data","text":"Function load structure factors corresponding one many 1D  structures available within crone package. structure factors amplitudes generated calculated data simulated error, mimic observed data. Phases calculated correct structure.","code":""},{"path":"https://jfoadi.github.io/crone/reference/load_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load observed structure factors from 1D structure data in workspace. — load_data","text":"","code":"load_data(sname = NULL)"},{"path":"https://jfoadi.github.io/crone/reference/load_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load observed structure factors from 1D structure data in workspace. — load_data","text":"sname character string. Name structure whose data loaded workspace. can one : beryllium_fluoride carbon_dioxide cyanate nitronium thiocyanate xenon_difluoride pinkerton2015 Default NULL, case function returns list structures available.","code":""},{"path":"https://jfoadi.github.io/crone/reference/load_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load observed structure factors from 1D structure data in workspace. — load_data","text":"named fdata-type list following elements:     Real numeric. Unit cell length angstroms. Always                included. SG.   Spacegroup 2-letters character string. two                 symmetries possible working within 1D                 crystallography, P1 (symmetry) P-1 (inversion                 origin). SG can either \"P1\" \"P-1\".                 Always included. hidx. Real numeric array. 1D unique (positive 1D context)                 Miller indices. Always included. Fobs.      Real numeric array. Amplitudes observed structure                      factors. always included. sigFobs.   Real numeric array. Errors associated Fobs.                      always included. Phicalc.   Real numeric array. Phases (degrees) structure                      factors calculated correct 1D structure.                      normally used check correctness                      Phiobs. always included.","code":""},{"path":"https://jfoadi.github.io/crone/reference/load_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load observed structure factors from 1D structure data in workspace. — load_data","text":"","code":"# Load thiocyanate data fdata <- load_data(\"thiocyanate\") print(fdata) #> $a #> [1] 4.969 #>  #> $SG #> [1] \"P1\" #>  #> $hidx #>  [1]  1  2  3  4  5  6  7  8  9 10 #>  #> $Fobs #>  [1]  6.613 12.467  9.226  3.454  2.308  0.752  0.304  0.088  0.054  0.002 #>  #> $sigFobs #>  [1] 1.208 1.703 1.293 0.862 0.435 0.380 0.424 0.373 0.328 0.414 #>  #> $Phicalc #>  [1]   75.7  147.7 -149.9  -57.2   -1.6   74.3  149.1 -141.8  -67.5    4.4 #>   # Default returns all names of structures included load_data() #>  #> 1D data available for loading: #>  #>    beryllium_fluoride #>    carbon_dioxide #>    cyanate #>    nitronium #>    thiocyanate #>    xenon_difluoride #>    pinkerton2015 #> Please use an appropriate name - e.g. load_data(\"cyanate\")"},{"path":"https://jfoadi.github.io/crone/reference/load_structure.html","id":null,"dir":"Reference","previous_headings":"","what":"Load 1D structure data in workspace. — load_structure","title":"Load 1D structure data in workspace. — load_structure","text":"Function load data one many 1D structures available within crone package.","code":""},{"path":"https://jfoadi.github.io/crone/reference/load_structure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load 1D structure data in workspace. — load_structure","text":"","code":"load_structure(sname = NULL)"},{"path":"https://jfoadi.github.io/crone/reference/load_structure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load 1D structure data in workspace. — load_structure","text":"sname character string. Name structure whose data loaded workspace. can one : beryllium_fluoride carbon_dioxide cyanate nitronium thiocyanate xenon_difluoride pinkerton2015 Default NULL, case function returns list structures available.","code":""},{"path":"https://jfoadi.github.io/crone/reference/load_structure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load 1D structure data in workspace. — load_structure","text":"named list following elements:     Real numeric. Unit cell length angstroms. SG   2-letters character string. two symmetries                possible working within 1D crystallography, P1 (                symmetry) P-1 (inversion origin). SG can                 either \"P1\" \"P-1\". x0    Vector real numerics indicating expanded atomic                 positions unit cell. Z     Vector integers indicating expanded                  atomic numbers atoms unit cell. B    Vector real numerics indicating expanded                 B factors atoms unit cell. occ  Vector real numerics indicating expanded                 occupancies atoms unit cell.","code":""},{"path":"https://jfoadi.github.io/crone/reference/load_structure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load 1D structure data in workspace. — load_structure","text":"","code":"# Load thiocyanate data sdata <- load_structure(\"thiocyanate\") print(sdata) #> $a #> [1] 4.969 #>  #> $SG #> [1] \"P1\" #>  #> $x0 #> [1] 1.000 2.813 3.969 #>  #> $Z #> [1] 16  6  7 #>  #> $B #> [1]  5.000 13.333 11.429 #>  #> $occ #> [1] 1 1 1 #>   # Default returns all names of structures included load_structure() #>  #> 1D structures available for loading: #>  #>    beryllium_fluoride #>    carbon_dioxide #>    cyanate #>    nitronium #>    thiocyanate #>    xenon_difluoride #>    pinkerton2015 #> Please use an appropriate name - e.g. load_structure(\"cyanate\")"},{"path":"https://jfoadi.github.io/crone/reference/local_maxima.html","id":null,"dir":"Reference","previous_headings":"","what":"Find local maxima in a vector of real values. — local_maxima","title":"Find local maxima in a vector of real values. — local_maxima","text":"Find local maxima vector real values.","code":""},{"path":"https://jfoadi.github.io/crone/reference/local_maxima.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find local maxima in a vector of real values. — local_maxima","text":"","code":"local_maxima(x)"},{"path":"https://jfoadi.github.io/crone/reference/local_maxima.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find local maxima in a vector of real values. — local_maxima","text":"x vector real numbers","code":""},{"path":"https://jfoadi.github.io/crone/reference/local_maxima.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find local maxima in a vector of real values. — local_maxima","text":"vector integers corresponding local maxima positions  vector x","code":""},{"path":"https://jfoadi.github.io/crone/reference/local_maxima.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find local maxima in a vector of real values. — local_maxima","text":"","code":"t <- seq(-10,10,length=1000) x <- dnorm(t,mean=3)+dnorm(t,mean=7) yM <- local_maxima(x)"},{"path":"https://jfoadi.github.io/crone/reference/plot_absorption_curves.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot of absorption curves — plot_absorption_curves","title":"Plot of absorption curves — plot_absorption_curves","text":"Plot f' f'' absorption curves specified chemical element. Curves can plotted specified wavelength regions using parameter \"zoom\".","code":""},{"path":"https://jfoadi.github.io/crone/reference/plot_absorption_curves.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot of absorption curves — plot_absorption_curves","text":"","code":"plot_absorption_curves(chem_el, zoom = NULL)"},{"path":"https://jfoadi.github.io/crone/reference/plot_absorption_curves.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot of absorption curves — plot_absorption_curves","text":"chem_el 1- 2-letters character string. chemical symbol interest. zoom Real vector length 2. two values extremes wavelength window inside plot two curves. Default curves plotted across full available range.","code":""},{"path":"https://jfoadi.github.io/crone/reference/plot_absorption_curves.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot of absorption curves — plot_absorption_curves","text":"Nothing, causes 2D plot displayed graphical window.","code":""},{"path":"https://jfoadi.github.io/crone/reference/plot_absorption_curves.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot of absorption curves — plot_absorption_curves","text":"","code":"# No zoom plot_absorption_curves(\"Fe\")   # Zoom plot_absorption_curves(\"Fe\",c(1,3))"},{"path":"https://jfoadi.github.io/crone/reference/read_h.html","id":null,"dir":"Reference","previous_headings":"","what":"Read data from a reflections file — read_h","title":"Read data from a reflections file — read_h","text":"Read data *_h.dat-type file containing cell size, spacegroup symbol amplitudes /phases observed /calculated structure factors. function loads file data standardised named list structure factors data.","code":""},{"path":"https://jfoadi.github.io/crone/reference/read_h.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read data from a reflections file — read_h","text":"","code":"read_h(filename)"},{"path":"https://jfoadi.github.io/crone/reference/read_h.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read data from a reflections file — read_h","text":"filename character string. Existing file includes structure  factors information. file name general form  \"[prefix]_h.dat\".","code":""},{"path":"https://jfoadi.github.io/crone/reference/read_h.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read data from a reflections file — read_h","text":"named list following elements:     Real numeric. Unit cell length angstroms. Always                included. SG.   Spacegroup 2-letters character string. two                 symmetries possible working within 1D                 crystallography, P1 (symmetry) P-1 (inversion                 origin). SG can either \"P1\" \"P-1\".                 Always included. hidx. Real numeric array. 1D unique (positive 1D context)                 Miller indices. Always included. Fobs.      Real numeric array. Amplitudes observed structure                      factors. always included. sigFobs.   Real numeric array. Errors associated Fobs.                      always included. Fp.        Real numeric vector. Amplitudes positive                      component Friedel (Bijvoet) pairs (F+).                     always included. sigFp.     Real numeric vector. Errors associated Fp.                      always included. Fm.        Real numeric vector. Amplitudes negative                      component Friedel (Bijvoet) pairs (F-). always                     included. sigFm.     Real numeric vector. Errors associated Fm.                     always included. Phiobs.    Real numeric array. Phases (degrees) structure                      factors obtained one methods used                      structure solution. always included. Phicalc.   Real numeric array. Phases (degrees) structure                      factors calculated correct 1D structure.                      normally used check correctness                      Phiobs. always included.","code":""},{"path":"https://jfoadi.github.io/crone/reference/read_h.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read data from a reflections file — read_h","text":"","code":"# Observed structure factors amplitudes and calculated phases # from thiocyanate structure datadir <- system.file(\"extdata\",package=\"crone\") filename <- file.path(datadir,\"thiocyanate_h.dat\") fdata <- read_x(filename) print(names(fdata)) #> [1] \"a\"  \"SG\" \"x0\" \"Z\"  \"B\"  print(fdata$Fobs) #> NULL print(fdata$sigFobs) #> NULL"},{"path":"https://jfoadi.github.io/crone/reference/read_x.html","id":null,"dir":"Reference","previous_headings":"","what":"Read unit cell content (atom and coordinates). — read_x","title":"Read unit cell content (atom and coordinates). — read_x","text":"Read unit cell length, space group, atom coordinates parameters coordinate file.","code":""},{"path":"https://jfoadi.github.io/crone/reference/read_x.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read unit cell content (atom and coordinates). — read_x","text":"","code":"read_x(filename)"},{"path":"https://jfoadi.github.io/crone/reference/read_x.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read unit cell content (atom and coordinates). — read_x","text":"filename character string. Existing file includes structural information. file name general form \"[prefix]_x.dat\".","code":""},{"path":"https://jfoadi.github.io/crone/reference/read_x.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read unit cell content (atom and coordinates). — read_x","text":"named list following elements:  .    Real numeric. Unit cell length angstroms. SG.   SG 2-letters character string. two symmetries                possible working within 1D crystallography, P1 (                symmetry) P-1 (inversion origin). SG can                 either \"P1\" \"P-1\". x0.    Vector real numerics indicating expanded atomic                 positions unit cell. Z.     Vector integers indicating expanded                  atomic numbers atoms unit cell. B.    Vector real numerics indicating expanded                 B factors atoms unit cell. occ.  Vector real numerics indicating expanded                 occupancies atoms unit cell.","code":""},{"path":"https://jfoadi.github.io/crone/reference/read_x.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read unit cell content (atom and coordinates). — read_x","text":"","code":"datadir <- system.file(\"extdata\",package=\"crone\") filename <- file.path(datadir,\"carbon_dioxide_x.dat\") sdata <- read_x(filename) print(names(sdata)) #> [1] \"a\"   \"SG\"  \"x0\"  \"Z\"   \"B\"   \"occ\" print(sdata) #> $a #> [1] 6.066 #>  #> $SG #> [1] \"P-1\" #>  #> $x0 #> [1] 1.870 3.033 #>  #> $Z #> [1] 8 6 #>  #> $B #> [1] 10.000 13.333 #>  #> $occ #> [1] 1.0 0.5 #>"},{"path":"https://jfoadi.github.io/crone/reference/reduce_to_asu.html","id":null,"dir":"Reference","previous_headings":"","what":"Reduce content of unit cell to asymmetric unit. — reduce_to_asu","title":"Reduce content of unit cell to asymmetric unit. — reduce_to_asu","text":"Atom types, B factors occupancies restricted corresponding positions asymmetric unit, input space group (SG) P-1. Otherwise sorted according increasing atom positions. starting positions correspond properly symmetry-expanded set, warning issued. symmetry used (P1) starting set forced values inside unit cell sorted according increasing atom positions.","code":""},{"path":"https://jfoadi.github.io/crone/reference/reduce_to_asu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reduce content of unit cell to asymmetric unit. — reduce_to_asu","text":"","code":"reduce_to_asu(adata, SG = NULL)"},{"path":"https://jfoadi.github.io/crone/reference/reduce_to_asu.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reduce content of unit cell to asymmetric unit. — reduce_to_asu","text":"adata named list, normally obtained use function read_x. list names correspond  different object types: .     Real numeric. size unit cell. SG.    Character string. Space group symbol; either \"P1\"                 \"P-1\" x0.    Vector real numerics indicating expanded atomic                positions unit cell. Z.     Vector integers indicating expanded                 atomic numbers atoms unit cell. B.    Vector real numerics indicating expanded                B factors atoms unit cell. occ.  Vector real numerics indicating expanded                occupancies atoms unit cell. SG 2-letters character string. two symmetries possible working within 1D crystallography, P1 (symmetry) P-1 (inversion origin). SG can either \"P1\" \"P-1\" function. Default NULL, case space group assumed equal one input structure.","code":""},{"path":"https://jfoadi.github.io/crone/reference/reduce_to_asu.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reduce content of unit cell to asymmetric unit. — reduce_to_asu","text":"named list following elements:  x0. Vector real numerics indicating reduced atomic                positions asymmetric unit. Z.  Vector integers indicating reduced atomic numbers                atoms asymmetric unit. B.  Vector real numerics indicating reduced B factors                atoms asymmetric unit. occ. Vector real numerics indicating reduced occupancies                  atoms asymmetric unit.","code":""},{"path":"https://jfoadi.github.io/crone/reference/reduce_to_asu.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reduce content of unit cell to asymmetric unit. — reduce_to_asu","text":"","code":"# Asymmetric unit includes 4 atoms between 0 and a/2, 1 in special position a <- 10 SG <- \"P-1\" x0 <- c(1,2,4,5) Z <- c(6,8,6,16) B <- c(1,1.2,1.1,0.8) occ <- c(1,1,1,0.5) adata <- standardise_sdata(a,SG,x0,Z,B,occ) ltmp <- expand_to_cell(adata) print(ltmp)  # Positions, atomic numbers, etc. have doubled #> $a #> [1] 10 #>  #> $SG #> [1] \"P-1\" #>  #> $x0 #> [1] 1 2 4 5 6 8 9 #>  #> $Z #> [1]  6  8  6 16  6  8  6 #>  #> $B #> [1] 1.0 1.2 1.1 0.8 1.1 1.2 1.0 #>  #> $occ #> [1] 1 1 1 1 1 1 1 #>   # Now these expanded values are used as input for reduction ltmp2 <- reduce_to_asu(ltmp)  # Compare print(x0) #> [1] 1 2 4 5 print(ltmp2$x0) #> [1] 1 2 4 5  # SG is \"P1\" a <- 16 SG <- \"P1\" x0 <- c(1,2,7,9,12,16) Z <- c(6,6,8,8,7,6) B <- c(0,0,0,0,0,0) occ <- c(1,1,1,1,1,1) adata <- standardise_sdata(a,SG,x0,Z,B,occ) ltmp3 <- reduce_to_asu(adata) print(ltmp3) # Now all positions are inside the unit cell #> $a #> [1] 16 #>  #> $SG #> [1] \"P1\" #>  #> $x0 #> [1]  0  1  2  7  9 12 #>  #> $Z #> [1] 6 6 6 8 8 7 #>  #> $B #> [1] 0 0 0 0 0 0 #>  #> $occ #> [1] 1 1 1 1 1 1 #>"},{"path":"https://jfoadi.github.io/crone/reference/scafac.html","id":null,"dir":"Reference","previous_headings":"","what":"Scattering factor for 1D gaussian atoms — scafac","title":"Scattering factor for 1D gaussian atoms — scafac","text":"Given unit cell length, atomic number, B factor, occupancy Miller index h, function returns corresponding value analytical scattering factor calculated Fourier transform 1D gaussian atom.","code":""},{"path":"https://jfoadi.github.io/crone/reference/scafac.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scattering factor for 1D gaussian atoms — scafac","text":"","code":"scafac(h, a, Zj, occj, Bj = NULL, k = ksigma)"},{"path":"https://jfoadi.github.io/crone/reference/scafac.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scattering factor for 1D gaussian atoms — scafac","text":"h Real numeric. One 1D Miller indices. h can also non-integer values integer values. enables plotting scattering curves. Real numeric. Length 1D unit cell. Zj Integer numeric. Atomic number (e.g. Oxygen Zj <- 8) occj Real numeric. Atomic occupancy, real number 0 1, 0 means atom missing crystal 1 means present unit cells crystal. Bj Real numeric. B factor associated thermal vibration atom. measured squared angstroms equal 8*pi^2*sigma^2, sigma gaussian atom width. k real number. controls standard deviation  gaussian function describing atom , thus, shape associated peak. standard deviation sigma given :          sigma = k * sqrt(Z)","code":""},{"path":"https://jfoadi.github.io/crone/reference/scafac.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scattering factor for 1D gaussian atoms — scafac","text":"real numeric. value scattering factor sprcified    Miller idex corresponding real value.","code":""},{"path":"https://jfoadi.github.io/crone/reference/scafac.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scattering factor for 1D gaussian atoms — scafac","text":"","code":"# Values for some Miller indices h <- 0:10 a <- 20 Zj <- 16 Bj <- 18  # Roughly corresponding to sigma 0.23 occj <- 1 fval <- scafac(h,a,Zj,occj,Bj) plot(h,fval,pch=16,xlab=\"Miller index\",ylab=\"Scattering factor\",      ylim=c(0,16))  # Continuous resolution h <- seq(0,10,length=1000) fval <- scafac(h,a,Zj,occj,Bj) points(h,fval,type=\"l\",col=2)  # Scattering curve for a lighter atom Zj <- 8 fval <- scafac(h,a,Zj,occj,Bj) points(h,fval,type=\"l\",col=3)  # Scattering curve for the same atom, just with smaller Bj (colder) Bj <- 10 fval <- scafac(h,a,Zj,occj,Bj) points(h,fval,type=\"l\",col=4)"},{"path":"https://jfoadi.github.io/crone/reference/standardise_fdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Standardise reflections data — standardise_fdata","title":"Standardise reflections data — standardise_fdata","text":"function output list fields needed functions dealing structure factors. equivalent function standardise_sdata, used prepare atomic structures data.","code":""},{"path":"https://jfoadi.github.io/crone/reference/standardise_fdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standardise reflections data — standardise_fdata","text":"","code":"standardise_fdata(a, SG, hidx, Fobs = NULL, sigFobs = NULL,   Fp = NULL, sigFp = NULL, Fm = NULL, sigFm = NULL,   Phiobs = NULL, Phicalc = NULL)"},{"path":"https://jfoadi.github.io/crone/reference/standardise_fdata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standardise reflections data — standardise_fdata","text":"Real numeric. Unit cell length angstroms. SG SG 2-letters character string. two symmetries possible working within 1D crystallography, P1 ( symmetry) P-1 (inversion origin). SG can  either \"P1\" \"P-1\". hidx Real numeric array. 1D unique (positive 1D context) Miller indices. Fobs Real numeric array. Amplitudes structure factors. Fp Fm NULL Fobs NULL, Fobs calculated averages Fp Fm. Fp, Fm Fobs included, input Fobs used, instead Fp Fm averages. sigFobs Real numeric array. Errors associated Fobs. sigFobs = NULL, errors estimated Fp Fm. Default NULL. Fp Real numeric vector. Amplitudes positive  component Friedel (Bijvoet) pairs (F+). Default NULL, .e. Fp included. sigFp Real numeric vector. Errors associated Fp. Default NULL, .e. sigFp included. Fm Real numeric vector. Amplitudes negative  component Friedel (Bijvoet) pairs (F-). Default NULL, .e. Fm included. sigFm Real numeric vector. Errors associated Fm. Default NULL, .e. sigFm included. Phiobs Real numeric array. Phases (degrees) structure  factors obtained one methods used structure solution. Default NULL. Phicalc Real numeric array. Phases (degrees) structure  factors calculated correct 1D structure. normally  used check correctness Phiobs. Default NULL.","code":""},{"path":"https://jfoadi.github.io/crone/reference/standardise_fdata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standardise reflections data — standardise_fdata","text":"named list variable number elements.  always included; others :     Real numeric. Unit cell length angstroms. Always                included. SG.   Spacegroup 2-letters character string. two                 symmetries possible working within 1D                 crystallography, P1 (symmetry) P-1 (inversion                 origin). SG can either \"P1\" \"P-1\".                 Always included. hidx. Real numeric array. 1D unique (positive 1D context)                 Miller indices. Always included. Fobs.      Real numeric array. Amplitudes observed structure                      factors. always included. sigFobs.   Real numeric array. Errors associated Fobs.                      always included. Fp.        Real numeric vector. Amplitudes positive                      component Friedel (Bijvoet) pairs (F+).                     always included. sigFp.     Real numeric vector. Errors associated Fp.                      always included. Fm.        Real numeric vector. Amplitudes negative                      component Friedel (Bijvoet) pairs (F-). always                     included. sigFm.     Real numeric vector. Errors associated Fm.                     always included. Phiobs.    Real numeric array. Phases (degrees) structure                      factors obtained one methods used                      structure solution. always included. Phicalc.   Real numeric array. Phases (degrees) structure                      factors calculated correct 1D structure.                      normally used check correctness                      Phiobs. always included.","code":""},{"path":"https://jfoadi.github.io/crone/reference/standardise_fdata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Standardise reflections data — standardise_fdata","text":"","code":"# Create an arbitrary structure with a heavy atom (Fe) a <- 20 SG <- \"P1\" x0 <- c(1,2,6,16) Z <- c(6,8,26,7) B <- c(8,7,5,8) occ <- c(1,1,1,1) sdata <- standardise_sdata(a,SG,x0,Z,B,occ)  # Miller indices, from -5 to 5 (to include negatives for anomalous) hidx <- -5:5  # Experimental structure factors with anomalous contribution # (lambda = 1.74) for creating Fm and Fp. Errors only due to # photons fluctuations. set.seed(9195)   # For demo purposes. ltmp <- sfobs(hidx,sdata,ntrialP=10,anoflag=TRUE,lbda=1.74) #>    Z          f1         f2 #> 1  6  0.02247688 0.01190210 #> 2  8  0.06101792 0.04200023 #> 3 26 -6.07057200 3.93874700 #> 4  7  0.03886725 0.02356395  # Fp and sigFp (Miller indices from 1 to 5) isel <- 1:5 idx <- match(isel,hidx) Fp <- ltmp$F[idx] sigFp <- ltmp$sF[idx]  # Fm and sigFm isel <- (-1):(-5) idx <- match(isel,hidx) Fm <- ltmp$F[idx] sigFm <- ltmp$sF[idx]  # Now only positive Miller indices hidx <- 1:5  # Create standardised data for reciprocal space fdata <- standardise_fdata(a,SG,hidx,Fp=Fp,sigFp=sigFp,          Fm=Fm,sigFm=sigFm)           # Fp and Fm print(fdata$Fp) #> [1] 22.98865 18.13441 14.86058 36.49140 21.62507 print(fdata$sigFp) #> [1] 1.0138364 0.6126155 0.8251829 1.0159425 1.3508296 print(fdata$Fm) #> [1] 24.31922 19.06673 13.65736 36.23244 22.29243 print(fdata$sigFm) #> [1] 1.9555213 0.9015824 0.7282520 1.7478419 1.0342202  # Fobs and sigFobs automatically created print(fdata$Fobs) #> [1] 23.65393 18.60057 14.25897 36.36192 21.95875 print(fdata$sigFobs) #> [1] 2.202709 1.090022 1.100581 2.021655 1.701280  # Structure factors without anomalous data for the same structure hidx <- 1:5 set.seed(9195)   # For demo purposes. ltmp <- sfobs(hidx,sdata,ntrialP=10) Fobs <- ltmp$F sigFobs <- ltmp$sF fdata <- standardise_fdata(a,SG,hidx,Fobs=Fobs,sigFobs=sigFobs) print(fdata) #> $a #> [1] 20 #>  #> $SG #> [1] \"P1\" #>  #> $hidx #> [1] 1 2 3 4 5 #>  #> $Fobs #> [1] 25.28947 20.47611 15.72216 38.27113 23.64257 #>  #> $sigFobs #> [1] 0.7805114 1.0530486 0.5196678 0.8355073 1.3994836 #>"},{"path":"https://jfoadi.github.io/crone/reference/standardise_sdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Organise atom data in a standard format for later use — standardise_sdata","title":"Organise atom data in a standard format for later use — standardise_sdata","text":"Function put group consisting cell size , space group SG, atom coordinates x0, atomic numbers Z, atomic B factors B atomic occupancies occ, named list 6 fields. used standard input/output format throughout crone package.","code":""},{"path":"https://jfoadi.github.io/crone/reference/standardise_sdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Organise atom data in a standard format for later use — standardise_sdata","text":"","code":"standardise_sdata(a, SG, x0, Z, B, occ)"},{"path":"https://jfoadi.github.io/crone/reference/standardise_sdata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Organise atom data in a standard format for later use — standardise_sdata","text":"Real numeric. Unit cell length angstroms. SG SG 2-letters character string. two symmetries possible working within 1D crystallography, P1 ( symmetry) P-1 (inversion origin). SG can  either \"P1\" \"P-1\". x0 Vector real numerics indicating expanded atomic positions unit cell. Z Vector integers indicating expanded atomic  numbers atoms unit cell. B Vector real numerics indicating expanded B factors  atoms unit cell. occ Vector real numerics indicating expanded occupancies atoms unit cell.","code":""},{"path":"https://jfoadi.github.io/crone/reference/standardise_sdata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Organise atom data in a standard format for later use — standardise_sdata","text":"named list following elements:  .    Real numeric. Unit cell length angstroms. SG.   SG 2-letters character string. two symmetries                possible working within 1D crystallography, P1 (                symmetry) P-1 (inversion origin). SG can                 either \"P1\" \"P-1\". x0.    Vector real numerics indicating expanded atomic                 positions unit cell. Z.     Vector integers indicating expanded                  atomic numbers atoms unit cell. B.    Vector real numerics indicating expanded                 B factors atoms unit cell. occ.  Vector real numerics indicating expanded                 occupancies atoms unit cell.","code":""},{"path":"https://jfoadi.github.io/crone/reference/standardise_sdata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Organise atom data in a standard format for later use — standardise_sdata","text":"","code":"# Create standard format for an arbitrary structure in P1 a <- 20 SG <- \"P1\" x0 <- c(2,11,16,19) Z <- c(6,6,16,8) B <- c(13,14,5,10) occ <- c(1,1,1,1) sdata <- standardise_sdata(a,SG,x0,Z,B,occ) print(sdata) #> $a #> [1] 20 #>  #> $SG #> [1] \"P1\" #>  #> $x0 #> [1]  2 11 16 19 #>  #> $Z #> [1]  6  6 16  8 #>  #> $B #> [1] 13 14  5 10 #>  #> $occ #> [1] 1 1 1 1 #>"},{"path":"https://jfoadi.github.io/crone/reference/structure_gauss.html","id":null,"dir":"Reference","previous_headings":"","what":"Structure of gaussian atoms — structure_gauss","title":"Structure of gaussian atoms — structure_gauss","text":"Structure formed gaussian atoms unit cell. Positions,  atomic numbers thermal factors given vectors  length. atom forming structure also characterised given  occupancy (0 1).","code":""},{"path":"https://jfoadi.github.io/crone/reference/structure_gauss.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Structure of gaussian atoms — structure_gauss","text":"","code":"structure_gauss(sdata, x = NULL, N = NULL, k = ksigma)"},{"path":"https://jfoadi.github.io/crone/reference/structure_gauss.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Structure of gaussian atoms — structure_gauss","text":"sdata named list, normally obtained use function read_x standardise_sdata.  list names correspond  different object types: .     Real numeric. size unit cell. SG.    Character string. Space group symbol; either \"P1\"                 \"P-1\" x0.    Vector real numerics indicating expanded atomic                positions unit cell. Z.     Vector integers indicating expanded                 atomic numbers atoms unit cell. B.    Vector real numerics indicating expanded                B factors atoms unit cell. occ.  Vector real numerics indicating expanded                occupancies atoms unit cell. x Point 1D cell function calculated. Default NULL, case grid set internally. N Integer. Number points regular grid, grid provided directly. k real number. controls standard deviation  gaussian function describing atom , thus, shape associated peak. standard deviation sigma given :          sigma = k * sqrt(Z)","code":""},{"path":"https://jfoadi.github.io/crone/reference/structure_gauss.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Structure of gaussian atoms — structure_gauss","text":"named list length 2: x grid (either input  user set internally), rr vector length equal   length vector x, values equal evaluated gaussian atoms.","code":""},{"path":"https://jfoadi.github.io/crone/reference/structure_gauss.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Structure of gaussian atoms — structure_gauss","text":"","code":"# Cell, atom types, positions and B factors a <- 10 SG <- \"P1\" x0 <- c(2,5,7) Z <- c(6,16,8) B <- c(0,0,0)  # All occupancies to 1 occ <- c(1,1,1)  # Standard data format sdata <- standardise_sdata(a,SG,x0,Z,B,occ)  # Grid for unit cell x <- seq(0,a,length=1000)  # Structure density rtmp <- structure_gauss(sdata,x) #> Warning: Out-of-scale occupancies produced! plot(rtmp$x,rtmp$rr,type=\"l\",xlab=\"x\",ylab=expression(rho))  # Now reduce occupancy of sulphur occ[2] <- 0.5 sdata <- standardise_sdata(a,SG,x0,Z,B,occ) rtmp <- structure_gauss(sdata,x) points(rtmp$x,rtmp$rr,type=\"l\",col=2)  # Increase temperature of oxygen B[3] <- 10 sdata <- standardise_sdata(a,SG,x0,Z,B,occ) rtmp <- structure_gauss(sdata,x) points(rtmp$x,rtmp$rr,type=\"l\",col=3)"},{"path":"https://jfoadi.github.io/crone/reference/strufac.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculation of structure factors — strufac","title":"Calculation of structure factors — strufac","text":"Calculates structure factors corresponding one 1D Miller  indices, given atomic content one unit cell. Anomalous scattering  can included using logical flag \"anoflag\" (default FALSE). Crystal  structures always considered symmetry. Thus 1D structure  P-1 symmetry expanded first function  \"expand_to_cell\".","code":""},{"path":"https://jfoadi.github.io/crone/reference/strufac.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculation of structure factors — strufac","text":"","code":"strufac(hidx, sdata, anoflag = FALSE, aK = anoK, lbda = 1,   k = ksigma, f1f2out = TRUE)"},{"path":"https://jfoadi.github.io/crone/reference/strufac.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculation of structure factors — strufac","text":"hidx Real numeric. One 1D Miller indices. sdata named list, normally obtained use functions read_x standardise_sdata.  list names correspond different object types: .     Real numeric. size unit cell. SG.    Character string. Space group symbol; either \"P1\"                 \"P-1\" x0.    Vector real numerics indicating expanded atomic                positions unit cell. Z.     Vector integers indicating expanded                 atomic numbers atoms unit cell. B.    Vector real numerics indicating expanded                B factors atoms unit cell. occ.  Vector real numerics indicating expanded                occupancies atoms unit cell. anoflag Logical variable. TRUE forces scattering factors include anomalous contributions. consequence, Friedel's pairs equal. aK Real numeric. fudge factor included decrease strength anomalous contributions. Without aK strength high 1D structures, compared real 3D structures. aK helps bringing anomalous contribution within 5 met large-size structures. default value aK=0.3 (anoK included internal data). lbda Real numeric. wavelength angstroms. value important relation anomalous scattering. k real number. controls standard deviation  gaussian function describing atom , thus, shape associated peak. standard deviation sigma given :       sigma = k * sqrt(Z) default value k=0.05 (ksigma included internal data). f1f2out Logical variable. variable controls output small table f' f'' values chemical elements structure. Default table printed.","code":""},{"path":"https://jfoadi.github.io/crone/reference/strufac.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculation of structure factors — strufac","text":"named list two vectors real numbers, structure   factors amplitudes, Fmod, phases, Fpha, corresponding Miller   indices input.","code":""},{"path":"https://jfoadi.github.io/crone/reference/strufac.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculation of structure factors — strufac","text":"","code":"# First create the crystal structure (P1) a <- 10 SG <- \"P1\" x0 <- c(1,4,6.5) Z <- c(8,26,6) B <- c(18,20,17) occ <- c(1,1,1) sdata <- standardise_sdata(a,SG,x0,Z,B,occ) lbda <- 1.7   # Close to Fe's absorption  # Miller indices (including DC (h=0) component) hidx <- 0:10  # Now structure factors without anomalous contribution ftmp <- strufac(hidx,sdata,lbda=lbda) print(length(ftmp$Fmod))  # Includes DC component (h=0) #> [1] 11 print(ftmp)          # Amplitudes decrease with increasing #> $Fmod #>  [1] 40.00000000 22.11435139 10.62662935 18.96067637 13.98228591  3.60862647 #>  [7]  2.35915179  2.08280243  0.55065616  0.31633073  0.04479261 #>  #> $Fpha #>  [1]    0.00000  140.08040  -50.66525   69.10247 -158.39782   32.24970 #>  [7]  177.61998 -103.04028   50.14049  -74.99236    0.00000 #>                       # resolution (Miller indices)                    # Now try with anomalous contributions ftmp <- strufac(hidx,sdata,lbda=lbda,anoflag=TRUE) #>    Z          f1         f2 #> 1  8  0.05830568 0.03963098 #> 2 26 -2.98134400 3.75151500 #> 3  6  0.02137232 0.01120651 print(ftmp)  # DC component is not any longer real #> $Fmod #>  [1] 39.1461236 21.1745424 10.2696423 18.0534594 12.8899111  3.7203348 #>  [7]  2.6673438  0.9157309  0.9821109  1.6480042  1.4103363 #>  #> $Fpha #>  [1]    1.669817  142.917302  -42.935720   72.572799 -154.553723   54.947857 #>  [7] -149.364548  -69.220701 -174.977867  -24.913067  126.481325 #>"},{"path":"https://jfoadi.github.io/crone/reference/write_h.html","id":null,"dir":"Reference","previous_headings":"","what":"Write structure factors to a reflections file — write_h","title":"Write structure factors to a reflections file — write_h","text":"function writes standardised structure factors data ASCII file. files includes cell size, space group character symbol Miller indices vector. can include observed /calculated structure factors amplitudes phases, either anomalous non-anomalous data.","code":""},{"path":"https://jfoadi.github.io/crone/reference/write_h.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write structure factors to a reflections file — write_h","text":"","code":"write_h(filename, fdata)"},{"path":"https://jfoadi.github.io/crone/reference/write_h.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write structure factors to a reflections file — write_h","text":"filename character string. Prefix structure factors file name. file name form \"[prefix]_h.dat\". fdata names list, usually created functions  standardise_fdata read_h, consisting following fields:    Real numeric. Unit cell length angstroms. Always               included. SG.   Spacegroup 2-letters character string. two                symmetries possible working within 1D                crystallography, P1 (symmetry) P-1 (inversion                origin). SG can either \"P1\" \"P-1\".                Always included. hidx. Real numeric array. 1D unique (positive 1D context)                Miller indices. Always included. Fobs.      Real numeric array. Amplitudes observed structure                     factors. always included. sigFobs.   Real numeric array. Errors associated Fobs.                     always included. Fp.        Real numeric vector. Amplitudes positive                     component Friedel (Bijvoet) pairs (F+).                    always included. sigFp.     Real numeric vector. Errors associated Fp.                     always included. Fm.        Real numeric vector. Amplitudes negative                     component Friedel (Bijvoet) pairs (F-). always                    included. sigFm.     Real numeric vector. Errors associated Fm.                    always included. Phiobs.    Real numeric array. Phases (degrees) structure                     factors obtained one methods used                     structure solution. always included. Phicalc.   Real numeric array. Phases (degrees) structure                     factors calculated correct 1D structure.                     normally used check correctness                     Phiobs. always included.","code":""},{"path":"https://jfoadi.github.io/crone/reference/write_h.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write structure factors to a reflections file — write_h","text":"function return anything, create ASCII   file name *_h.dat contains structure factors type   information.","code":""},{"path":"https://jfoadi.github.io/crone/reference/write_h.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write structure factors to a reflections file — write_h","text":"","code":"# Data from thiocyanate structure datadir <- system.file(\"extdata\",package=\"crone\") filename <- file.path(datadir,\"thiocyanate_x.dat\") sdata <- read_x(filename)  # Miller indices hidx <- 1:10  # Observed structure factors with errors ltmp <- sfobs(hidx,sdata) Fobs <- ltmp$F sigFobs <- ltmp$sF  # Phases from calculated structure factors ftmp <- strufac(hidx,sdata) phicalc <- ftmp$Fpha  # Create standardised fdata structure fdata <- standardise_fdata(sdata$a,sdata$SG,hidx,Fobs=Fobs,                      sigFobs=sigFobs,Phicalc=phicalc)   # Name of structure factors file (in temporary directory) wd <- tempdir() fname <- file.path(wd,\"test\")  # Write data to file write_h(fname,fdata)"},{"path":"https://jfoadi.github.io/crone/reference/write_x.html","id":null,"dir":"Reference","previous_headings":"","what":"Write atomic coordinates to a file. — write_x","title":"Write atomic coordinates to a file. — write_x","text":"Function export information concerning given structure -called coordinates file type *_x.dat.","code":""},{"path":"https://jfoadi.github.io/crone/reference/write_x.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write atomic coordinates to a file. — write_x","text":"","code":"write_x(filename, sdata)"},{"path":"https://jfoadi.github.io/crone/reference/write_x.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write atomic coordinates to a file. — write_x","text":"filename character string. Prefix output ASCII file include structural information. file name \"[Prefix]_x.dat\". sdata named list, normally obtained use function read_x. list names correspond  different object types: .     Real numeric. size unit cell. SG.    Character string. Space group symbol; either \"P1\"                 \"P-1\" x0.    Vector real numerics indicating expanded atomic                positions unit cell. Z.     Vector integers indicating expanded                 atomic numbers atoms unit cell. B.    Vector real numerics indicating expanded                B factors atoms unit cell. occ.  Vector real numerics indicating expanded                occupancies atoms unit cell.","code":""},{"path":"https://jfoadi.github.io/crone/reference/write_x.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write atomic coordinates to a file. — write_x","text":"function return anything, create ASCII   file name *_x.dat contains coordinates atoms   structure type information.","code":""},{"path":"https://jfoadi.github.io/crone/reference/write_x.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write atomic coordinates to a file. — write_x","text":"","code":"# Create an arbitrary structure in P1 a <- 23 SG <- \"P1\" x0 <- c(2,11,16,19) Z <- c(6,6,16,8) B <- c(13,14,5,10) occ <- c(1,1,1,1) wd <- tempdir() prfx <- file.path(wd,\"test\") sdata <- standardise_sdata(a,SG,x0,Z,B,occ) write_x(prfx,sdata)"},{"path":"https://jfoadi.github.io/crone/news/index.html","id":"crone-010","dir":"Changelog","previous_headings":"","what":"crone 0.1.0","title":"crone 0.1.0","text":"CRAN release: 2019-07-27 First release. CRAN encourage installation.","code":""},{"path":"https://jfoadi.github.io/crone/news/index.html","id":"crone-011","dir":"Changelog","previous_headings":"","what":"crone 0.1.1","title":"crone 0.1.1","text":"CRAN release: 2019-08-24 Patch correct bugs affecting release CRAN. Change version due month passed since last submission.","code":""}]
